openapi: 3.0.0
info:
  title: chetam app API
  version: 1.0.0

security:
  - BearerAuth: [ ]

tags:
  - name: Auth
    description: register & login
  - name: User
    description: user data

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Register and login new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: Successful register
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Inappropriate credentials
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: Login and generate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Invalid credentials
  /api/v1/user:
    summary: Get user info
    get:
      tags:
        - User
      security:
        - BearerAuth: [ ]
      responses:
        "200":
          description: User info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized

components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          nullable: false
        login:
          type: string
          nullable: false
        password:
          type: string
          format: password
          nullable: false
      required:
        - email
        - login
        - password
    RegisterResponse:
      type: object
      properties:
        token:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          format: password
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    User:
      type: object
      properties:
        userId:
          type: integer
        email:
          type: string
        login:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
